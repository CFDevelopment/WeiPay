version: 2

jobs:
  react-native:
    build:
      working_directory: /Users/distiller/project
      docker:
      - image: circleci/node:8
      steps:
      - checkout

      - restore_cache:
          key: yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}

      - restore_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}

      - run: yarn install

      - save_cache:
          key: yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}
          paths:
          - ~/.cache/yarn

      - save_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}
          paths:
          - node_modules

      - run:
          name: jest tests
          command: |
            mkdir -p test-results/jest
            yarn run test
          environment:
            JEST_JUNIT_OUTPUT: test-results/jest/junit.xml

      - persist_to_workspace:
          root: ~/demo-react-native
          paths:
          - node_modules

      - store_test_results:
          path: test-results

      - store_artifacts:
          path: test-results

  beta-ios:
    build:
      macos:
        xcode: "9.4.1"
      working_directory: /Users/distiller/project
      environment:
        FL_OUTPUT_DIR: output
        FASTLANE_LANE: ios beta
      shell: /bin/bash --login -o pipefail
      steps:
        - checkout
        - restore_cache:
            key: 1-gems-{{ checksum "Gemfile.lock" }}
        - run: bundle check || bundle install --path vendor/bundle
        - save_cache:
            key: 1-gems-{{ checksum "Gemfile.lock" }}
            paths:
              - vendor/bundle
        - run:
            name: fastlane
            command: bundle exec fastlane $FASTLANE_LANE --verbose
        - store_artifacts:
            path: output
        - store_test_results:
            path: output/scan
      parallelism: 4

  alpha-android:
    build:
      macos:
        xcode: "9.4.1"
      working_directory: /Users/distiller/project
      environment:
        FL_OUTPUT_DIR: output
        FASTLANE_LANE: ios beta
      shell: /bin/bash --login -o pipefail
      steps:
        - checkout
        - restore_cache:
            key: 1-gems-{{ checksum "Gemfile.lock" }}
        - run: bundle check || bundle install --path vendor/bundle
        - save_cache:
            key: 1-gems-{{ checksum "Gemfile.lock" }}
            paths:
              - vendor/bundle
        - run:
            name: fastlane
            command: bundle exec fastlane $FASTLANE_LANE --verbose
        - store_artifacts:
            path: output
        - store_test_results:
            path: output/scan
      parallelism: 4
#
# workflows:
#   version: 2
#   android-ios-beta:
#     jobs:
#       -react-native:
#         filters:
#           branches:
#             only: staging
#       -beta-ios:
#         filters:
#           branches:
#             only: staging
#       -alpha-android:
#         filters:
#           branches:
#             only: staging
